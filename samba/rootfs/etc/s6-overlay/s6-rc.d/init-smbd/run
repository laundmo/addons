#!/command/with-contenv bashio
# ==============================================================================
# Prepare the Samba service for running
# ==============================================================================
declare password
declare username
declare -a interfaces=()
export HOSTNAME

# Check Login data
for user in $(bashio::config "users|keys"); do
    bashio::config.require.username "users[${user}].username"
    bashio::config.require.password "users[${user}].password"
done

# Read hostname from API or setting default "hassio"
HOSTNAME=$(bashio::info.hostname)
if bashio::var.is_empty "${HOSTNAME}"; then
    bashio::log.warning "Can't read hostname, using default."
    HOSTNAME="hassio"
fi
bashio::log.info "Hostname: ${HOSTNAME}"

# Get supported interfaces
for interface in $(bashio::network.interfaces); do
    interfaces+=("${interface}")
done
if [ ${#interfaces[@]} -eq 0 ]; then
    bashio::exit.nok 'No supported interfaces found to bind on.'
fi
bashio::log.info "Interfaces: $(printf '%s ' "${interfaces[@]}")"

# Generate Samba configuration.
jq ".interfaces = $(jq -c -n '$ARGS.positional' --args -- "${interfaces[@]}")" /data/options.json |
    tempio \
        -template /usr/share/tempio/smb.gtpl \
        -out /etc/samba/smb.conf

# Init users
for user in $(bashio::config "users|keys"); do
    username=$(bashio::config "users[${user}].username")
    password=$(bashio::config "users[${user}].password")
    addgroup "${username}"
    adduser -D -H -G "${username}" -s /bin/false "${username}"

    (
        echo "$password"
        echo "$password"
    ) |
        smbpasswd -a -s -c "/etc/samba/smb.conf" "${username}"
done

# bashio::log.info "$(cat /etc/samba/smb.conf)"
